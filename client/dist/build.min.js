var app=angular.module("glint",["glint.services"]).filter("moment",function(){return function(a){return moment(a).fromNow()}});app.controller("IdeasCtrl",function(a){var b=this;b.data={ideas:[]},b.idea={},b.postSuccess=!1,b.displayIdeas=function(){a.getIdeas().then(function(a){b.data.ideas=a})["catch"](function(a){console.error("displayIdeas error",a)})},b.submitIdea=function(){_.escape(b.idea.title);var c=JSON.stringify(b.idea);a.createIdea(c).then(function(){b.postSuccess=!0,b.displayIdeas()})["catch"](function(a){console.error("createIdea error",a)})},b.displayIdeas()}),app.controller("VotesCtrl",function(a){var b=this;b.upvote=function(b){voteCount=b.votes++,id=b._id,a.updateVotes(voteCount,id).then(function(a){console.log("upvote success",a)})["catch"](function(a){console.error("upvote error",a)})},b.downvote=function(b){voteCount=b.votes--,id=b._id,a.updateVotes(voteCount,id).then(function(a){console.log("downvote success",a)})["catch"](function(a){console.error("downvote error",a)})}}),describe("IdeasCtrl",function(){beforeEach(module("glint"));var a,b,c,d,e,f;beforeEach(inject(function(g){a=g.get("$rootScope"),b=a.$new(),d=g.get("$httpBackend"),f=g.get("Ideas"),e=g.get("$controller"),c=e("IdeasCtrl",{self:b})})),describe("displayIdeas",function(){it("should have a data property",function(){expect(c).to.have.property("data")}),it("should have a displayIdeas function",function(){expect(c.displayIdeas).to.be.a("function")}),it("should call displayIdeas() when controller is loaded",function(){var a=[{},{},{}];d.expectGET("/api/ideas").respond(a),d.flush(),expect(c.data.ideas).to.eql(a)})}),it("should have an idea property",function(){expect(c).to.have.property("idea")}),describe("submitIdea",function(){it("should have a submitIdea function",function(){expect(c.submitIdea).to.be.a("function")}),it("should be able to create new ideas with submitIdea()",function(){var a=[{},{},{}];d.expectGET("/api/ideas").respond(a),d.expectPOST("/api/ideas").respond(200,""),d.expectGET("/api/ideas").respond(a),c.submitIdea(),d.flush()})})}),describe("VotesCtrl",function(){beforeEach(module("glint"));var a,b,c,d;beforeEach(inject(function(e,f){e=$injector.get("$rootScope"),a=e.$new(),c=$injector.get("$httpBackend"),d=$injector.get("Votes"),f=$injector.get("$controller"),b=f("VotesCtrl",{self:a})})),it("should have an upvote function",function(){expect(b.upvote).to.be.a("function")}),it("should have an downvote function",function(){expect(b.downvote).to.be.a("function")})}),module.exports=function(a){a.set({basePath:"",frameworks:["mocha","chai"],files:["bower_components/angular/angular.js","bower_components/angular-route/angular-route.js","bower_components/angular-mocks/angular-mocks.js","https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.9.0/moment.min.js","https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.2/underscore-min.js","*.js"],exclude:["karma.conf.js"],preprocessors:{},reporters:["progress"],port:9876,colors:!0,logLevel:a.LOG_INFO,autoWatch:!0,browsers:["Chrome"],singleRun:!0})};var glintServices=angular.module("glint.services",[]);glintServices.factory("Ideas",function(a){var b=function(){return a({method:"GET",url:"/api/ideas"}).then(function(a){return a.data})["catch"](function(a){console.error("getIdeas error",a)})},c=function(b){return a({method:"POST",url:"/api/ideas",data:b}).then(function(a){return a.data})["catch"](function(a){console.error("createIdeas error",a)})};return{getIdeas:b,createIdea:c}}),glintServices.factory("Votes",function(a){var b=function(b,c){return a({method:"PUT",url:"/api/votes/:"+c,data:b}).then(function(a){return a.data})["catch"](function(a){console.error("updateVotes error",a)})};return{updateVotes:b}});